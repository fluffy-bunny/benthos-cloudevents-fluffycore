/**
 * CloudEvent Protobuf Format
 *
 * - Required context attributes are explicitly represented.
 * - Optional and Extension context attributes are carried in a map structure.
 * - Data may be represented as binary, text, or protobuf messages.
 */

 syntax = "proto3";

 package io.cloudevents.v1;
 
 import "google/protobuf/any.proto";
 import "google/protobuf/timestamp.proto";
 
 option csharp_namespace = "CloudNative.CloudEvents.V1";
 option go_package = "github.com/fluffy-bunny/benthos-cloudevents-fluffycore/pkg/proto/cloudevents";
 option java_package = "pkg.proto.cloudevents.v1.proto";
 option java_multiple_files = true;
 option php_namespace = "Io\\CloudEvents\\V1\\Proto";
 option ruby_package = "Io::CloudEvents::V1::Proto";
 
 message CloudEventMetaData {
 
  // -- CloudEvent Context Attributes

  // Required Attributes
  //---------------------------------------------------------------------
  // Unique event identifier.
  string id = 1;
  // URI of the event source.
  string source = 2;
  // Version of the spec in use.
  string spec_version = 3;
  // Event type identifier.
  string type = 4;

  // Optional & Extension Attributes
  //---------------------------------------------------------------------
  map<string, CloudEventAttributeValue> attributes = 5;


 /**
  * The CloudEvent specification defines
  * seven attribute value types...
  */

 message CloudEventAttributeValue {

   oneof attr {
     bool ce_boolean = 1;
     int32 ce_integer = 2;
     string ce_string = 3;
     bytes ce_bytes = 4;
     string ce_uri = 5;
     string ce_uri_ref = 6;
     google.protobuf.Timestamp ce_timestamp = 7;
   }
 }
}

 message CloudEvent {
 
    // -- CloudEvent Context Attributes
 
    // Required Attributes
    //---------------------------------------------------------------------
    // Unique event identifier.
    string id = 1;
    // URI of the event source.
    string source = 2;
    // Version of the spec in use.
    string spec_version = 3;
    // Event type identifier.
    string type = 4;
 
    // Optional & Extension Attributes
    //---------------------------------------------------------------------
    map<string, CloudEventAttributeValue> attributes = 5;
 
    // -- CloudEvent Data (Bytes, Text, or Proto)
    oneof  data {
      // If the event is binary data then the datacontenttype attribute
      // should be set to an appropriate media-type.
      bytes binary_data = 6;
      // If the event is string data then the datacontenttype attribute
      // should be set to an appropriate media-type such as application/json.
      string text_data = 7;
      // If the event is a protobuf then it must be encoded using this Any
      // type. The datacontenttype attribute should be set to
      // application/protobuf and the dataschema attribute set to the message
      // type.
      google.protobuf.Any proto_data = 8;
    }
 
   /**
    * The CloudEvent specification defines
    * seven attribute value types...
    */
 
   message CloudEventAttributeValue {
 
     oneof attr {
       bool ce_boolean = 1;
       int32 ce_integer = 2;
       string ce_string = 3;
       bytes ce_bytes = 4;
       string ce_uri = 5;
       string ce_uri_ref = 6;
       google.protobuf.Timestamp ce_timestamp = 7;
     }
   }
 }
 
 /**
  * CloudEvent Protobuf Batch Format
  *
  */
 
 message CloudEventBatch {
   repeated CloudEvent events = 1;
 }