// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.

package cloudeventprocessor

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// ICloudEventProcessorServer defines the grpc server
type ICloudEventProcessorServer interface {
	CloudEventProcessorServer
}

type UnimplementedCloudEventProcessorServerEndpointRegistration struct {
}

func (UnimplementedCloudEventProcessorServerEndpointRegistration) RegisterHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// cloudeventprocessorServer defines the grpc server truct
type cloudeventprocessorServer struct {
	UnimplementedCloudEventProcessorServer
	UnimplementedCloudEventProcessorServerEndpointRegistration
}

// Register the server with grpc
func (srv *cloudeventprocessorServer) Register(s *grpc.Server) {
	RegisterCloudEventProcessorServer(s, srv)
}

// AddCloudEventProcessorServer adds the fluffycore aware grpc server
func AddCloudEventProcessorServer[T ICloudEventProcessorServer](cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, func() endpoint.IEndpointRegistration {
		return &cloudeventprocessorServer{}
	})
	fluffy_dozm_di.AddScoped[ICloudEventProcessorServer](cb, ctor)
}

// ProcessCloudEvents...
func (s *cloudeventprocessorServer) ProcessCloudEvents(ctx context.Context, request *ProcessCloudEventsRequest) (*ProcessCloudEventsResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[ICloudEventProcessorServer](requestContainer)
	return downstreamService.ProcessCloudEvents(ctx, request)
}
