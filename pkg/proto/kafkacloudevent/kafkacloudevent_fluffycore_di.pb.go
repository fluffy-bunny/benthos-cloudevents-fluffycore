// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.

package kafkacloudevent

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IKafkaCloudEventServiceServer defines the grpc server
type IKafkaCloudEventServiceServer interface {
	KafkaCloudEventServiceServer
}

type UnimplementedKafkaCloudEventServiceServerEndpointRegistration struct {
}

func (UnimplementedKafkaCloudEventServiceServerEndpointRegistration) RegisterHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// kafkacloudeventserviceServer defines the grpc server truct
type kafkacloudeventserviceServer struct {
	UnimplementedKafkaCloudEventServiceServer
	UnimplementedKafkaCloudEventServiceServerEndpointRegistration
}

// Register the server with grpc
func (srv *kafkacloudeventserviceServer) Register(s *grpc.Server) {
	RegisterKafkaCloudEventServiceServer(s, srv)
}

// AddKafkaCloudEventServiceServer adds the fluffycore aware grpc server
func AddKafkaCloudEventServiceServer[T IKafkaCloudEventServiceServer](cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, func() endpoint.IEndpointRegistration {
		return &kafkacloudeventserviceServer{}
	})
	fluffy_dozm_di.AddScoped[IKafkaCloudEventServiceServer](cb, ctor)
}

// SubmitCloudEvents...
func (s *kafkacloudeventserviceServer) SubmitCloudEvents(ctx context.Context, request *SubmitCloudEventsRequest) (*SubmitCloudEventsResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IKafkaCloudEventServiceServer](requestContainer)
	return downstreamService.SubmitCloudEvents(ctx, request)
}
